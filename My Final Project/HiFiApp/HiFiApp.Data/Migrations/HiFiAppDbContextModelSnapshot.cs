// <auto-generated />
using System;
using HiFiApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HiFiApp.Data.Migrations
{
    [DbContext(typeof(HiFiAppDbContext))]
    partial class HiFiAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("HiFiApp.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HiFiApp.Entity.Concrete.HiFi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HiFis");
                });

            modelBuilder.Entity("HiFiApp.Entity.Concrete.HiFiCategory", b =>
                {
                    b.Property<int>("HiFiId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HiFiId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("HiFiCategories");
                });

            modelBuilder.Entity("HiFiApp.Entity.Concrete.HiFiCategory", b =>
                {
                    b.HasOne("HiFiApp.Entity.Concrete.Category", "Category")
                        .WithMany("HiFiCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiFiApp.Entity.Concrete.HiFi", "HiFi")
                        .WithMany("HiFiCategories")
                        .HasForeignKey("HiFiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("HiFi");
                });

            modelBuilder.Entity("HiFiApp.Entity.Concrete.Category", b =>
                {
                    b.Navigation("HiFiCategories");
                });

            modelBuilder.Entity("HiFiApp.Entity.Concrete.HiFi", b =>
                {
                    b.Navigation("HiFiCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
